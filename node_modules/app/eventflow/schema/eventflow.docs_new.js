var
    Sync = require('sync'),
    rpc = require('core/rpc');

var schema = function (params) {
    var
        appsrv = params.appsrv,
        pageStructure = params.pageStructure,
        parsedUrl = params.parsedUrl,
        sess = params.sess;
    if (sess.newref != undefined)
        pageStructure.pFind('eventflow.docs_new').ref = sess.newref;
    pageStructure.pFind('eventflow.docs_new').doctypes = rpc.local.sync(rpc, 'app.eventflow.web.doctype.find', [sess.apikey, {}]);
    if (sess.docname != undefined) {
        var x = pageStructure.pFind('eventflow.docs_new').doctypes.find('name', sess.docname);
        pageStructure.pFind('eventflow.docs_new').fields = appsrv.page.sync(appsrv, 'docdefault', x);
        pageStructure.pFind('eventflow.docs_new').selecteddoctype = sess.docname;
    } else
        pageStructure.pFind('eventflow.docs_new').fields = '';
    pageStructure.pFind('leftmenu').menu
        .find('title', 'ProfitPlatform').menu
        .find('href', '#eventflow.docs_new').active = true;
    pageStructure.pFind('content').content = appsrv.page.sync(appsrv,
        'eventflow.docs_new', pageStructure.pFind('eventflow.docs_new'));
    return pageStructure;
}.async();

module.exports = exports = schema;