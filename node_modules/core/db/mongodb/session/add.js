module.exports = exports = function (i, params, result) {
    model = new i.model({session: params.session});
    model.user.push(params.user);
    model.username = params.user.login;
    model.password = params.user.password;
    model.needrelogin = false;
    model.save(function (err) {
        if (err) {
            i.l.trace('core.db.mongodb.session.add', err);
            result('Cannot create session', null);
        } else {
            i.l.trace('core.db.mongodb.session.add', 'Session create successful');
            process.nextTick(function () {
                i.database.emit('schema', 'session.update', params, function (err, nobj) {
                });
            });
            /*(function(){
             xself = this;
             xself.intId = setInterval(function(){
             i.l.trace('core.db.mongodb.session.add', 'Session timeout');
             i.database.emit('schema', 'session.find', params, function(err, obj){
             if(obj!==null&&(((new Date()).getTime() - obj.date.getTime()) > sessionDescription.lifeTime)){
             params.needrelogin = true;
             i.database.emit('schema', 'session.update', params, function(err, xobj){
             clearInterval(xself.intId);
             i.l.trace('core.db.mongodb.session.add', 'Need relogin for ' + params.session);
             });
             }
             });
             }, sessionDescription.lifeTime);
             })();*/
            result(null, 'success');
        }
    });
};