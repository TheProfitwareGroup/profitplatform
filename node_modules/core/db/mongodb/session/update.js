var
    database = require('core/db.js'),
    sessionDescription = require('./model.js').description;

module.exports = exports = function (i, params, result) {
    model = i.model;
    i.database.emit('schema', 'session.find', params, function (err, nobj) {
        model.where('session').in([params.session]).remove(function () {
            model = new i.model({session: params.session});
            if (params.user && params.username && params.password) {
                model.user.push(params.user);
                model.username = params.user.login;
                model.password = params.user.password;
            } else {
                model.user = nobj.user;
                model.username = nobj.username;
                model.password = nobj.password;
            }
            model.needrelogin = params.needrelogin ? true : false;
            model.save(function (err) {
                i.l.trace('core.db.mongodb.session.update', 'Found and updated to ' + JSON.stringify(params));
                i.l.trace('core.db.mongodb.session.update', err);
                if (err) {
                    result(err, null);
                } else {
                    checkNeedrelogin = function () {
                        i.database.emit('schema', 'session.find', params, function (err, obj) {
                            if (obj !== null && (((new Date()).getTime() - obj.date.getTime()) > sessionDescription.lifeTime) && !obj.user[0].appUser) {
                                params.needrelogin = true;
                                i.database.emit('schema', 'session.update', params, function (err, xobj) {
                                    i.l.trace('core.db.mongodb.session.update', 'Need relogin for ' + params.session);
                                });
                            }
                        });
                    };
                    if (!params.needrelogin)
                        setTimeout(checkNeedrelogin, sessionDescription.lifeTime);
                    /*
                     (function(){
                     xself = this;
                     xself.intId = setInterval(function(){
                     params.needrelogin = false;
                     i.l.trace('core.db.mongodb.session.update', 'Session timeout, intervalID = ' + xself.intId);
                     i.database.emit('schema', 'session.find', params, function(err, obj){
                     if(obj==null){
                     i.l.trace('core.db.mongodb.session.update', 'Clearing intervalID = ' + xself.intId + ' as it not exists');
                     clearInterval(xself.intId);
                     }
                     if(obj!==null&&(((new Date()).getTime() - obj.date.getTime()) > sessionDescription.lifeTime)){
                     params.needrelogin = true;
                     i.database.emit('schema', 'session.update', params, function(err, xobj){
                     i.l.trace('core.db.mongodb.session.update', 'Clearing intervalID = ' + xself.intId);
                     clearInterval(xself.intId);
                     i.l.trace('core.db.mongodb.session.update', 'Need relogin for ' + params.session);
                     });
                     }
                     });
                     }, sessionDescription.lifeTime);
                     })();
                     */
                    result(null, params);
                }
            });
        });
    });
};