var
	ejs = require('ejs'),
	path = require('path'),
	fs = require('fs'),
	event = require('events').EventEmitter,
	Sync = require('sync');

var server = function(root) {
	var
		self = this;
	self.compiled = {};
	self.root = path.dirname(root);
	self._options = {
			root : self.root
	};
	self.eJSoptions = {}; 
};

server.prototype.page = function(pagename, vars) {
	if(vars == undefined)
		vars = {};
	var pagestr;
	self = this;
	vars._options = self._options;
	if(self.compiled[pagename] != undefined){
		pagestr = self.compiled[pagename](vars);
	}else{
		var pagePath = path.resolve(path.join(self.root, 'template', pagename + '.jtpl'));
		var filestr = fs.readFile.sync(null, pagePath);
		self.compiled[pagename] = ejs.compile(filestr.toString('utf-8'), self.eJSoptions);
		pagestr = self.compiled[pagename](vars);
	}
	return pagestr;
}.async();

server.prototype.renderAll = function(pageList, result) {
	var iCounter = 0,
		iPages = {};
	self = this;
	iPageDone = new event();
	iPageDone.on('allDone', function(){
		if(iCounter == pageList.length){
			result(null, iPages);
		}
	});
	pageList.forEach(function(tpage){
		if(tpage.vars == undefined)
			tpage.vars = {};
		self.page(tpage.page, tpage.vars, function(err, data){
			iCounter++;
			if(!err){
				iPages[tpage.page] = data;
			}
			iPageDone.emit('allDone');
		});
	});
};

module.exports = exports = server;