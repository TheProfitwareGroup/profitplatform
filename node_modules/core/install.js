var l = require('core/logger.js'),
	path = require('path'),
	event = require('events').EventEmitter,
    assert = require('assert'),
    options = require('options.js');
    
var db = require('core/db.js'),
    access = require('core/access.js'),
    doInstall = false,
    iObjects = 0;

installObject = new event();

installObject.on('install', function(installInfo){
    var
    	schemas = installInfo.schemas,
    	users = installInfo.users, 
    	profiles = installInfo.profiles,
    	autoprocs = installInfo.autoprocs,
    	apps = installInfo.apps;
    	
	installObject.on('tryexit', function(){
	    if(iObjects == (schemas.length + autoprocs.length +
	    				users.length + apps.length + profiles.length))
	        process.nextTick(function(){
	            process.exit(0);
	        });
	});    

    db.emit('init', function(){
        l.trace('core.install', 'Database initialization success!');
        schemas.forEach(function(scmn) {
            db.emit('schema', 'schema.add', scmn, function(err, obj){
                if(!err){
                    try{
                    	console.log();
                        var cSchema = require(path.join('schema', path.join.apply(path, obj.split('.')) + '.js'));
                        assert.ok(cSchema.install);
                        cSchema.install(installInfo, function(){
                            iObjects++;
                            l.trace('core.install', 'Schema ' + obj + ' added successfully'); 
                            installObject.emit('tryexit');                            
                        });
                    }catch(e){
                        iObjects++;
                        l.trace('core.install', 'Loading schema private installer of ' + obj + ' failed: ' + e.message);
                        l.trace('core.install', 'Schema ' + obj + ' added successfully'); 
                        installObject.emit('tryexit');
                    }
                }else
                    l.trace('core.install', err);
            });
        });
        apps.forEach(function(appn) {
            db.emit('schema', 'app.add', appn, function(err){
                if(!err){
                    iObjects++;
                    installObject.emit('tryexit');
                    l.trace('core.install', 'Application ' + appn.name + ' added successfully');
                }else
                    l.trace('core.install', err);
            });
        });
        profiles.forEach(function(profile) {
            db.emit('schema', 'profile.add', profile, function(err){
                if(!err){
                    iObjects++;
                    installObject.emit('tryexit');
                    l.trace('core.install', 'Profile ' + profile.name + ' added successfully');
                }else
                    l.trace('core.install', err);
            });
        });
        autoprocs.forEach(function(autoprocn) {
            db.emit('schema', 'autoproc.add', autoprocn, function(err){
                if(!err){
                    iObjects++;
                    installObject.emit('tryexit');
                    l.trace('core.install', 'Autoproc ' + autoprocn.name + ' added successfully');
                }else
                    l.trace('core.install', err);
            });
        });
        users.forEach(function(usern) {
            db.emit('schema', 'user.add', usern, function(err){
                if(!err){
                    iObjects++;
                    l.trace('core.install', 'User ' + usern.login + ' added successfully'); 
                    installObject.emit('tryexit');
                }else
                    l.trace('core.install', err);
            });
        });
    });
});

module.exports = function(installInfo) {
	installObject.emit('install', installInfo);
}
