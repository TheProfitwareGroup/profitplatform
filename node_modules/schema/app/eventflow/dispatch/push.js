var
    schema = require('core/schema.js').initme(__filename),
    rpc = require('core/rpc.js'),
    l = require('core/logger.js'),
    sprintf = require('sprintf').sprintf;
db = require('core/db.js');

var main = {};

main[schema] = function (apikey, document, result) {
    rpc.local('app.eventflow.document.status', [apikey, document], function (err, document) {
        if (err != null || document == undefined || document.status == 'error')
            return result(null, {
                status: 'error',
                error: 'Something bad happened with document'
            });
        db.emit('schema', '[app.eventflow]doctype.find', {sysid: document.sysid}, function (err, obj) {
            if (err != null || obj == undefined)
                return result(null, {
                    status: 'error',
                    error: sprintf('Doctype for sysid %s not found', document.sysid)
                });
            var i = obj.length,
                found = false;
            while (i--) {
                if (document.doctype == obj[i].name) {
                    found = true;
                    break;
                }
            }
            ;
            if (obj[i] && obj[i].dispatcher && obj[i].dispatcher[document.status]) {
                db.emit('schema', '[app.eventflow]document.find', {ref: document.ref}, function (err, document) {
                    rpc.local(obj[i].dispatcher[document.status], [apikey, document], result);
                });
            } else
                result(null, {
                    status: 'error',
                    error: sprintf('Dispatcher for document type "%s" of %s and status "%s" not found', document.doctype, document.sysid, document.status)
                });
        });
    });
};

exports.main = main;