var l = require('core/logger.js'),
	db = require('mongoose'),
    Schema = db.Schema,
    ObjectId = Schema.ObjectId;

var event = require('events').EventEmitter,
    database = new event();

var smsSchema = new Schema({
    id : ObjectId,
    login : { type : String },
    password : { type : String },
    sender : { type : String }
});

db.model('smsModel', smsSchema);
smsModel = db.model('smsModel');

database.on('install', function(smsSenders, result){
    smsSenders.forEach(function(smsSender){
        model = smsModel;
        model.where('login').in([smsSender.login]).remove(function(){
            model = new smsModel(smsSender);
            model.save(function(err){
                if(err)
                    l.trace('schema.smsc.db.mongodb', 'Cannot create smsSender ' + smsSender.login);
                else
                    l.trace('schema.smsc.db.mongodb', 'smsSender ' + smsSender.login + ' created successfully');
                result();
            });
        });
    });
});

database.smsSchema = smsSchema;
database.getSender = function(login, result){
    model = smsModel;
    model.findOne({ login : login }, function(err, obj){
        if(err) {
            l.trace('schema.smsc.db.mongodb', err);
            result('Cannot get sender', null);
        } else {
            result(null, obj);
        }
    });
};

module.exports = exports = database;