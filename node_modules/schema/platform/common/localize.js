/**
 * Module dependencies
 */

var l = require('core/logger.js'),
	options = require('options.js');
var schema = require('core/schema.js').initme(__filename);
var utils = require('connect').utils,
    assert = require('assert'),
    jsonrpc = require('core/jsonrpc.js'),
    access = require('core/access.js'),
    path = require('path');

var main = {};

/**
 * Schema: platform.common.localize
 * 
 * Returns localized string by string id that
 * contains schema exlusive method part but
 * inclusive localized resource name
 * 
 * @param {String} apikey
 * @param {String} language
 * @param {Object} strings
 * @return {Object}
 * @api public
 */

main[schema] = function(apikey, language, strings, result) {
    try {
        // TODO: Add APIKEY Check
        
        var apichecked = false,
            apikeyadd = '_unauth',
            ret = {};
            
        if(apichecked)
            apikeyadd = '';
            
        strings.forEach(function(strn){
            try{
                var lres = strn.split('.').pop(),
                    scm = path.join.apply(this, (new RegExp('(.*)\.' + lres + '$')).exec(strn)[1].split('.'));
                    
                ret[strn] = 
                    require(path.join('schema', scm, 
                        'lres_' + language + apikeyadd + '.js')).lres[lres];
            }catch(n){
            }
        });
        result(null, ret);
    } catch(e) {
        l.trace('schema.platform.common.localize', e);
        result(jsonrpc.INVALID_REQUEST);
    }  
};

exports.main = main;
exports.access = access.LEVEL_AJAX;
exports.install = function(next){
    next();
}